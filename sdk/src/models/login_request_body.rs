/*
 * Matrix Client-Server Registration and Login API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct LoginRequestBody {
    /// The login type being used.
    #[serde(rename = "type")]
    pub _type: String,
    #[serde(rename = "identifier")]
    pub identifier: Option<::models::UserIdentifier>,
    /// When logging in using a third party identifier, the medium of the identifier. Must be 'email'.  Deprecated in favour of ``identifier``.
    #[serde(rename = "medium")]
    pub medium: Option<String>,
    /// Third party identifier for the user.  Deprecated in favour of ``identifier``.
    #[serde(rename = "address")]
    pub address: Option<String>,
    /// Required when ``type`` is ``m.login.password``. The user's password.
    #[serde(rename = "password")]
    pub password: Option<String>,
    /// Required when ``type`` is ``m.login.token``. Part of `Token-based`_ login.
    #[serde(rename = "token")]
    pub token: Option<String>,
    /// ID of the client device. If this does not correspond to a known client device, a new device will be created. The server will auto-generate a device_id if this is not specified.
    #[serde(rename = "device_id")]
    pub device_id: Option<String>,
    /// A display name to assign to the newly-created device. Ignored if ``device_id`` corresponds to a known device.
    #[serde(rename = "initial_device_display_name")]
    pub initial_device_display_name: Option<String>,
}

impl LoginRequestBody {
    pub fn new(_type: String) -> LoginRequestBody {
        LoginRequestBody {
            _type: _type,
            identifier: None,
            medium: None,
            address: None,
            password: None,
            token: None,
            device_id: None,
            initial_device_display_name: None,
        }
    }
}
