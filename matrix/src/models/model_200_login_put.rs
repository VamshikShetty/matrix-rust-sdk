/*
 * Matrix Client-Server Registration and Login API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct Model200LoginPut {
    /// The fully-qualified Matrix ID that has been registered.
    #[serde(rename = "user_id",skip_serializing_if="Option::is_none")]
    pub user_id: Option<String>,
    /// An access token for the account. This access token can then be used to authorize other requests.
    #[serde(rename = "access_token",skip_serializing_if="Option::is_none")]
    pub access_token: Option<String>,
    /// The server_name of the homeserver on which the account has been registered. **Deprecated**. Clients should extract the server_name from ``user_id`` (by splitting at the first colon) if they require it. Note also that ``homeserver`` is not spelt this way.
    #[serde(rename = "home_server",skip_serializing_if="Option::is_none")]
    pub home_server: Option<String>,
    /// ID of the logged-in device. Will be the same as the corresponding parameter in the request, if one was specified. 
    #[serde(rename = "device_id",skip_serializing_if="Option::is_none")]
    pub device_id: Option<String>,
}

impl Model200LoginPut {
    pub fn new() -> Model200LoginPut {
        Model200LoginPut {
            user_id: None,
            access_token: None,
            home_server: None,
            device_id: None,
        }
    }
}
