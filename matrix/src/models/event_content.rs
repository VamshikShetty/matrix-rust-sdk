/*
 * Matrix Client-Server Registration and Login API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct EventContent {
    /// The avatar URL for this user, if any. This is added by the homeserver.
    #[serde(rename = "avatar_url",skip_serializing_if="Option::is_none")]
    pub avatar_url: Option<String>,
    /// The display name for this user, if any. This is added by the homeserver.
    #[serde(rename = "displayname",skip_serializing_if="Option::is_none")]
    pub displayname: Option<String>,
    /// The membership state of the user.
    #[serde(rename = "membership",skip_serializing_if="Option::is_none")]
    pub membership: Option<String>,
    /// Flag indicating if the room containing this event was created with the intention of being a direct chat. See Direct Messaging.
    #[serde(rename = "is_direct",skip_serializing_if="Option::is_none")]
    pub is_direct: Option<bool>,
    #[serde(rename = "third_party_invite",skip_serializing_if="Option::is_none")]
    pub third_party_invite: Option<::models::Invite>,
    #[serde(rename = "unsigned",skip_serializing_if="Option::is_none")]
    pub unsigned: Option<::models::UnsignedData>,
}

impl EventContent {
    pub fn new() -> EventContent {
        EventContent {
            avatar_url: None,
            displayname: None,
            membership: None,
            is_direct: None,
            third_party_invite: None,
            unsigned: None,
        }
    }
}
