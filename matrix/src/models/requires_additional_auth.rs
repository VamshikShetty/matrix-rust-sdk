/*
 * Matrix Client-Server Registration and Login API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// RequiresAdditionalAuth : Used by servers to indicate that additional authentication information is required.

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct RequiresAdditionalAuth {
    /// A list of the login flows supported by the server for this API.
    #[serde(rename = "flows")]
    pub flows: Vec<::models::RequiresAdditionalAuthFlows>,
    /// This is a session identifier that the client must pass back to the home server, if one is provide, in subsequent attempts to authenticate in the same API call.
    #[serde(rename = "session",skip_serializing_if="Option::is_none")]
    pub session: Option<String>,
    /// A list of the stages the client has completed successfully
    #[serde(rename = "completed",skip_serializing_if="Option::is_none")]
    pub completed: Option<Vec<String>>,
    /// Contains any information that the client will need to know in order to use a given type of authentication. For each login type presented, that type may be present as a key in this dictionary. For example, the public part of an OAuth client ID could be given here.
    #[serde(rename = "params",skip_serializing_if="Option::is_none")]
    pub params: Option<::std::collections::HashMap<String, Value>>,
}

impl RequiresAdditionalAuth {
    /// Used by servers to indicate that additional authentication information is required.
    pub fn new(flows: Vec<::models::RequiresAdditionalAuthFlows>) -> RequiresAdditionalAuth {
        RequiresAdditionalAuth {
            flows: flows,
            session: None,
            completed: None,
            params: None,
        }
    }
}
